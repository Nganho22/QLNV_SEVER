package QLNVdbsAPI.controller;

import org.springframework.web.bind.annotation.RestController;

import QLNVdbsAPI.model.Database;
import QLNVdbsAPI.repository.DatabaseRepository;

import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.http.HttpStatus;
import java.util.Optional;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import java.util.List;
import java.util.ArrayList;
import org.springframework.web.bind.annotation.PathVariable;

@RestController
@RequestMapping("/api")
public class DatabaseController{
	@Autowired
    private DatabaseRepository repo;

    @GetMapping("/dbs")
    public ResponseEntity<List<Database>> getAllDatabase() {
        try {
            List<Database> DatabaseList = new ArrayList<>();
            repo.findAll().forEach(DatabaseList::add);
            if (DatabaseList.isEmpty()) {
                return new ResponseEntity<>(HttpStatus.NO_CONTENT);
            }
            return new ResponseEntity<>(DatabaseList, HttpStatus.OK);
        } catch (Exception e) {
            return new ResponseEntity<>(null, HttpStatus.INTERNAL_SERVER_ERROR);
        }
    }
    @GetMapping("/dbs/{id}")
    public ResponseEntity<List<Database>> getDatabase(@PathVariable("id") int id, @RequestBody Database Database) {
        try {
            List<Database> DatabaseList = new ArrayList<>();
            repo.findAll().forEach(DatabaseList::add);
            if (DatabaseList.isEmpty()) {
                return new ResponseEntity<>(HttpStatus.NO_CONTENT);
            }
            return new ResponseEntity<>(DatabaseList, HttpStatus.OK);
        } catch (Exception e) {
            return new ResponseEntity<>(null, HttpStatus.INTERNAL_SERVER_ERROR);
        }
    }

}
