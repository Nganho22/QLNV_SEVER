package QLNVActivityAPI.controller;

import org.springframework.web.bind.annotation.RestController;

import QLNVActivityAPI.model.Activity;
import QLNVActivityAPI.repository.ActivityRepository;

import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.http.HttpStatus;
import java.util.Optional;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import java.util.List;
import java.util.ArrayList;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestParam;
import java.time.format.DateTimeFormatter;
import java.time.LocalDate;
import java.util.stream.Collectors;



@RestController
@RequestMapping("/apiActivity")
public class ActivityController{
	@Autowired
    private ActivityRepository repo;

    @GetMapping("/")
    public List<Activity> getDatabases() {
		return repo.findAll();
	}
    
    public List<Activity> getActivitiesByMonth(@PathVariable("month") int month) {
        List<Activity> allActivities = repo.findAll();
        List<Activity> filteredActivities = new ArrayList<>();
        DateTimeFormatter formatter = DateTimeFormatter.ofPattern("d/M/yyyy");

        filteredActivities = allActivities.stream()
            .filter(activity -> {
                return isMonthMatch(activity.getHanCuoiDangKy(), month, formatter)
                    || isMonthMatch(activity.getNgayBatDau(), month, formatter)
                    || isMonthMatch(activity.getNgayKetThuc(), month, formatter);
            })
            .collect(Collectors.toList());

        return filteredActivities;
    }

    
    private boolean isMonthMatch(String date, int month, DateTimeFormatter formatter) {
        try {
            LocalDate localDate = LocalDate.parse(date, formatter);
            return localDate.getMonthValue() == month;
        } catch (Exception e) {
            return false;
        }
    }

}
